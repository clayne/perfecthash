//
// Auto-generated.
//

DECLSPEC_ALIGN(16)
const CHAR CompiledPerfectHashTableRoutinesCSourceRawCStr[] =
    "\n"
    "//\n"
    "// Begin CompiledPerfectHashTableRoutines.c.\n"
    "//\n"
    "\n"
    "\n"
    "#ifndef CPH_INDEX_ONLY\n"
    "\n"
    "DECLARE_LOOKUP_ROUTINE()\n"
    "{\n"
    "    CPHINDEX Index;\n"
    "\n"
    "    Index = INDEX_ROUTINE(Key);\n"
    "    return TABLE_VALUES[Index];\n"
    "}\n"
    "\n"
    "DECLARE_INSERT_ROUTINE()\n"
    "{\n"
    "    CPHINDEX Index;\n"
    "    CPHVALUE Previous;\n"
    "\n"
    "    Index = INDEX_ROUTINE(Key);\n"
    "    Previous = TABLE_VALUES[Index];\n"
    "    TABLE_VALUES[Index] = Value;\n"
    "    return Previous;\n"
    "}\n"
    "\n"
    "DECLARE_DELETE_ROUTINE()\n"
    "{\n"
    "    CPHINDEX Index;\n"
    "    CPHVALUE Previous;\n"
    "\n"
    "    Index = INDEX_ROUTINE(Key);\n"
    "    Previous = TABLE_VALUES[Index];\n"
    "    TABLE_VALUES[Index] = 0;\n"
    "    return Previous;\n"
    "}\n"
    "\n"
    "DECLARE_INTERLOCKED_INCREMENT_ROUTINE()\n"
    "{\n"
    "    CPHINDEX Index;\n"
    "    CPHVALUE New;\n"
    "\n"
    "    Index = INDEX_ROUTINE(Key);\n"
    "#ifdef _WIN32\n"
    "    New = _InterlockedIncrement((volatile LONG *)&TABLE_VALUES[Index]);\n"
    "#else\n"
    "    New = __sync_add_and_fetch(&TABLE_VALUES[Index], 1);\n"
    "#endif\n"
    "    return New;\n"
    "}\n"
    "\n"
    "#ifdef CPH_HAS_KEYS\n"
    "DECLARE_INDEX_BSEARCH_ROUTINE()\n"
    "{\n"
    "    CPHINDEX Low;\n"
    "    CPHINDEX High;\n"
    "    CPHINDEX Middle;\n"
    "    CPHDKEY Value;\n"
    "\n"
    "    Low = 0;\n"
    "    High = NUMBER_OF_KEYS - 1;\n"
    "    Middle = (Low + High) / 2;\n"
    "\n"
    "    while (Low <= High) {\n"
    "\n"
    "        Value = KEYS[Middle];\n"
    "\n"
    "        if (Value == Key) {\n"
    "            break;\n"
    "        } else if (Value < Key) {\n"
    "            Low = Middle + 1;\n"
    "        } else {\n"
    "            High = Middle - 1;\n"
    "        }\n"
    "\n"
    "        Middle = (Low + High) / 2;\n"
    "    }\n"
    "\n"
    "    return Middle;\n"
    "}\n"
    "#endif\n"
    "\n"
    "#endif\n"
    "\n"
    "//\n"
    "// End CompiledPerfectHashTableRoutines.c.\n"
    "//\n"
    "\n"
;

const STRING CompiledPerfectHashTableRoutinesCSourceRawCString = {
    sizeof(CompiledPerfectHashTableRoutinesCSourceRawCStr) - sizeof(CHAR),
    sizeof(CompiledPerfectHashTableRoutinesCSourceRawCStr),
#ifdef _WIN64
    0,
#endif
    (PCHAR)&CompiledPerfectHashTableRoutinesCSourceRawCStr,
};

#ifndef RawCString
#define RawCString (&CompiledPerfectHashTableRoutinesCSourceRawCString)
#endif
